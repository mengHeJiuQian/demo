/*
 * This file is generated by jOOQ.
 */
package org.jooq.domain;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.domain.tables.Customer;
import org.jooq.domain.tables.SysGroup;
import org.jooq.domain.tables.SysLog;
import org.jooq.domain.tables.SysOrganization;
import org.jooq.domain.tables.SysResource;
import org.jooq.domain.tables.SysRole;
import org.jooq.domain.tables.SysUser;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpringbootDemo extends SchemaImpl {

    private static final long serialVersionUID = 811373490;

    /**
     * The reference instance of <code>springboot_demo</code>
     */
    public static final SpringbootDemo SPRINGBOOT_DEMO = new SpringbootDemo();

    /**
     * 客户信息表
     */
    public final Customer CUSTOMER = org.jooq.domain.tables.Customer.CUSTOMER;

    /**
     * 用户组表
     */
    public final SysGroup SYS_GROUP = org.jooq.domain.tables.SysGroup.SYS_GROUP;

    /**
     * 系统日志表
     */
    public final SysLog SYS_LOG = org.jooq.domain.tables.SysLog.SYS_LOG;

    /**
     * 组织机构表
     */
    public final SysOrganization SYS_ORGANIZATION = org.jooq.domain.tables.SysOrganization.SYS_ORGANIZATION;

    /**
     * 资源表
     */
    public final SysResource SYS_RESOURCE = org.jooq.domain.tables.SysResource.SYS_RESOURCE;

    /**
     * 角色表
     */
    public final SysRole SYS_ROLE = org.jooq.domain.tables.SysRole.SYS_ROLE;

    /**
     * 用户表
     */
    public final SysUser SYS_USER = org.jooq.domain.tables.SysUser.SYS_USER;

    /**
     * No further instances allowed
     */
    private SpringbootDemo() {
        super("springboot_demo", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Customer.CUSTOMER,
            SysGroup.SYS_GROUP,
            SysLog.SYS_LOG,
            SysOrganization.SYS_ORGANIZATION,
            SysResource.SYS_RESOURCE,
            SysRole.SYS_ROLE,
            SysUser.SYS_USER);
    }
}
