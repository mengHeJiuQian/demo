/*
 * This file is generated by jOOQ.
 */
package org.jooq.domain;


import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.domain.tables.Customer;
import org.jooq.domain.tables.SysGroup;
import org.jooq.domain.tables.SysLog;
import org.jooq.domain.tables.SysOrganization;
import org.jooq.domain.tables.SysResource;
import org.jooq.domain.tables.SysRole;
import org.jooq.domain.tables.SysUser;
import org.jooq.domain.tables.records.CustomerRecord;
import org.jooq.domain.tables.records.SysGroupRecord;
import org.jooq.domain.tables.records.SysLogRecord;
import org.jooq.domain.tables.records.SysOrganizationRecord;
import org.jooq.domain.tables.records.SysResourceRecord;
import org.jooq.domain.tables.records.SysRoleRecord;
import org.jooq.domain.tables.records.SysUserRecord;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>springboot_demo</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CustomerRecord, Integer> IDENTITY_CUSTOMER = Identities0.IDENTITY_CUSTOMER;
    public static final Identity<SysGroupRecord, Long> IDENTITY_SYS_GROUP = Identities0.IDENTITY_SYS_GROUP;
    public static final Identity<SysLogRecord, Long> IDENTITY_SYS_LOG = Identities0.IDENTITY_SYS_LOG;
    public static final Identity<SysOrganizationRecord, Long> IDENTITY_SYS_ORGANIZATION = Identities0.IDENTITY_SYS_ORGANIZATION;
    public static final Identity<SysResourceRecord, Long> IDENTITY_SYS_RESOURCE = Identities0.IDENTITY_SYS_RESOURCE;
    public static final Identity<SysRoleRecord, Long> IDENTITY_SYS_ROLE = Identities0.IDENTITY_SYS_ROLE;
    public static final Identity<SysUserRecord, Long> IDENTITY_SYS_USER = Identities0.IDENTITY_SYS_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CustomerRecord> KEY_CUSTOMER_PRIMARY = UniqueKeys0.KEY_CUSTOMER_PRIMARY;
    public static final UniqueKey<SysGroupRecord> KEY_SYS_GROUP_PRIMARY = UniqueKeys0.KEY_SYS_GROUP_PRIMARY;
    public static final UniqueKey<SysLogRecord> KEY_SYS_LOG_PRIMARY = UniqueKeys0.KEY_SYS_LOG_PRIMARY;
    public static final UniqueKey<SysOrganizationRecord> KEY_SYS_ORGANIZATION_PRIMARY = UniqueKeys0.KEY_SYS_ORGANIZATION_PRIMARY;
    public static final UniqueKey<SysResourceRecord> KEY_SYS_RESOURCE_PRIMARY = UniqueKeys0.KEY_SYS_RESOURCE_PRIMARY;
    public static final UniqueKey<SysRoleRecord> KEY_SYS_ROLE_PRIMARY = UniqueKeys0.KEY_SYS_ROLE_PRIMARY;
    public static final UniqueKey<SysUserRecord> KEY_SYS_USER_PRIMARY = UniqueKeys0.KEY_SYS_USER_PRIMARY;
    public static final UniqueKey<SysUserRecord> KEY_SYS_USER_IDX_SYS_USER_USERNAME = UniqueKeys0.KEY_SYS_USER_IDX_SYS_USER_USERNAME;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CustomerRecord, Integer> IDENTITY_CUSTOMER = Internal.createIdentity(Customer.CUSTOMER, Customer.CUSTOMER.ID);
        public static Identity<SysGroupRecord, Long> IDENTITY_SYS_GROUP = Internal.createIdentity(SysGroup.SYS_GROUP, SysGroup.SYS_GROUP.ID);
        public static Identity<SysLogRecord, Long> IDENTITY_SYS_LOG = Internal.createIdentity(SysLog.SYS_LOG, SysLog.SYS_LOG.ID);
        public static Identity<SysOrganizationRecord, Long> IDENTITY_SYS_ORGANIZATION = Internal.createIdentity(SysOrganization.SYS_ORGANIZATION, SysOrganization.SYS_ORGANIZATION.ID);
        public static Identity<SysResourceRecord, Long> IDENTITY_SYS_RESOURCE = Internal.createIdentity(SysResource.SYS_RESOURCE, SysResource.SYS_RESOURCE.ID);
        public static Identity<SysRoleRecord, Long> IDENTITY_SYS_ROLE = Internal.createIdentity(SysRole.SYS_ROLE, SysRole.SYS_ROLE.ID);
        public static Identity<SysUserRecord, Long> IDENTITY_SYS_USER = Internal.createIdentity(SysUser.SYS_USER, SysUser.SYS_USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CustomerRecord> KEY_CUSTOMER_PRIMARY = Internal.createUniqueKey(Customer.CUSTOMER, "KEY_customer_PRIMARY", Customer.CUSTOMER.ID);
        public static final UniqueKey<SysGroupRecord> KEY_SYS_GROUP_PRIMARY = Internal.createUniqueKey(SysGroup.SYS_GROUP, "KEY_sys_group_PRIMARY", SysGroup.SYS_GROUP.ID);
        public static final UniqueKey<SysLogRecord> KEY_SYS_LOG_PRIMARY = Internal.createUniqueKey(SysLog.SYS_LOG, "KEY_sys_log_PRIMARY", SysLog.SYS_LOG.ID);
        public static final UniqueKey<SysOrganizationRecord> KEY_SYS_ORGANIZATION_PRIMARY = Internal.createUniqueKey(SysOrganization.SYS_ORGANIZATION, "KEY_sys_organization_PRIMARY", SysOrganization.SYS_ORGANIZATION.ID);
        public static final UniqueKey<SysResourceRecord> KEY_SYS_RESOURCE_PRIMARY = Internal.createUniqueKey(SysResource.SYS_RESOURCE, "KEY_sys_resource_PRIMARY", SysResource.SYS_RESOURCE.ID);
        public static final UniqueKey<SysRoleRecord> KEY_SYS_ROLE_PRIMARY = Internal.createUniqueKey(SysRole.SYS_ROLE, "KEY_sys_role_PRIMARY", SysRole.SYS_ROLE.ID);
        public static final UniqueKey<SysUserRecord> KEY_SYS_USER_PRIMARY = Internal.createUniqueKey(SysUser.SYS_USER, "KEY_sys_user_PRIMARY", SysUser.SYS_USER.ID);
        public static final UniqueKey<SysUserRecord> KEY_SYS_USER_IDX_SYS_USER_USERNAME = Internal.createUniqueKey(SysUser.SYS_USER, "KEY_sys_user_idx_sys_user_username", SysUser.SYS_USER.USERNAME);
    }
}
