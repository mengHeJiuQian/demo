/*
 * This file is generated by jOOQ.
 */
package org.jooq.domain.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.domain.Indexes;
import org.jooq.domain.Keys;
import org.jooq.domain.SpringbootDemo;
import org.jooq.domain.tables.records.SysGroupRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户组表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysGroup extends TableImpl<SysGroupRecord> {

    private static final long serialVersionUID = 1483266767;

    /**
     * The reference instance of <code>springboot_demo.sys_group</code>
     */
    public static final SysGroup SYS_GROUP = new SysGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysGroupRecord> getRecordType() {
        return SysGroupRecord.class;
    }

    /**
     * The column <code>springboot_demo.sys_group.id</code>. 编号
     */
    public final TableField<SysGroupRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "编号");

    /**
     * The column <code>springboot_demo.sys_group.name</code>. 组名称
     */
    public final TableField<SysGroupRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "组名称");

    /**
     * The column <code>springboot_demo.sys_group.type</code>. 组类型
     */
    public final TableField<SysGroupRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(50), this, "组类型");

    /**
     * The column <code>springboot_demo.sys_group.description</code>. 描述
     */
    public final TableField<SysGroupRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(100), this, "描述");

    /**
     * Create a <code>springboot_demo.sys_group</code> table reference
     */
    public SysGroup() {
        this(DSL.name("sys_group"), null);
    }

    /**
     * Create an aliased <code>springboot_demo.sys_group</code> table reference
     */
    public SysGroup(String alias) {
        this(DSL.name(alias), SYS_GROUP);
    }

    /**
     * Create an aliased <code>springboot_demo.sys_group</code> table reference
     */
    public SysGroup(Name alias) {
        this(alias, SYS_GROUP);
    }

    private SysGroup(Name alias, Table<SysGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysGroup(Name alias, Table<SysGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户组表"));
    }

    public <O extends Record> SysGroup(Table<O> child, ForeignKey<O, SysGroupRecord> key) {
        super(child, key, SYS_GROUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpringbootDemo.SPRINGBOOT_DEMO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_GROUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SysGroupRecord, Long> getIdentity() {
        return Keys.IDENTITY_SYS_GROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysGroupRecord> getPrimaryKey() {
        return Keys.KEY_SYS_GROUP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<SysGroupRecord>>asList(Keys.KEY_SYS_GROUP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysGroup as(String alias) {
        return new SysGroup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysGroup as(Name alias) {
        return new SysGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysGroup rename(String name) {
        return new SysGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysGroup rename(Name name) {
        return new SysGroup(name, null);
    }
}
