/*
 * This file is generated by jOOQ.
 */
package org.jooq.domain.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.domain.tables.SysOrganization;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 组织机构表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysOrganizationRecord extends UpdatableRecordImpl<SysOrganizationRecord> implements Record7<Long, String, Long, String, Byte, Integer, Byte> {

    private static final long serialVersionUID = -887723886;

    /**
     * Setter for <code>springboot_demo.sys_organization.id</code>. 编号
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>springboot_demo.sys_organization.id</code>. 编号
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>springboot_demo.sys_organization.name</code>. 组织名称
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>springboot_demo.sys_organization.name</code>. 组织名称
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>springboot_demo.sys_organization.parent_id</code>. 父编号
     */
    public void setParentId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>springboot_demo.sys_organization.parent_id</code>. 父编号
     */
    public Long getParentId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>springboot_demo.sys_organization.parent_ids</code>. 父编号列表
     */
    public void setParentIds(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>springboot_demo.sys_organization.parent_ids</code>. 父编号列表
     */
    public String getParentIds() {
        return (String) get(3);
    }

    /**
     * Setter for <code>springboot_demo.sys_organization.available</code>. 是否有效
     */
    public void setAvailable(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>springboot_demo.sys_organization.available</code>. 是否有效
     */
    public Byte getAvailable() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>springboot_demo.sys_organization.priority</code>. 优先级
     */
    public void setPriority(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>springboot_demo.sys_organization.priority</code>. 优先级
     */
    public Integer getPriority() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>springboot_demo.sys_organization.leaf</code>. 叶子节点
     */
    public void setLeaf(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>springboot_demo.sys_organization.leaf</code>. 叶子节点
     */
    public Byte getLeaf() {
        return (Byte) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, Long, String, Byte, Integer, Byte> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, Long, String, Byte, Integer, Byte> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return SysOrganization.SYS_ORGANIZATION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SysOrganization.SYS_ORGANIZATION.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return SysOrganization.SYS_ORGANIZATION.PARENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SysOrganization.SYS_ORGANIZATION.PARENT_IDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return SysOrganization.SYS_ORGANIZATION.AVAILABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return SysOrganization.SYS_ORGANIZATION.PRIORITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field7() {
        return SysOrganization.SYS_ORGANIZATION.LEAF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getParentIds();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component5() {
        return getAvailable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getPriority();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component7() {
        return getLeaf();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getParentIds();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getAvailable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getPriority();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value7() {
        return getLeaf();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysOrganizationRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysOrganizationRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysOrganizationRecord value3(Long value) {
        setParentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysOrganizationRecord value4(String value) {
        setParentIds(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysOrganizationRecord value5(Byte value) {
        setAvailable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysOrganizationRecord value6(Integer value) {
        setPriority(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysOrganizationRecord value7(Byte value) {
        setLeaf(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysOrganizationRecord values(Long value1, String value2, Long value3, String value4, Byte value5, Integer value6, Byte value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SysOrganizationRecord
     */
    public SysOrganizationRecord() {
        super(SysOrganization.SYS_ORGANIZATION);
    }

    /**
     * Create a detached, initialised SysOrganizationRecord
     */
    public SysOrganizationRecord(Long id, String name, Long parentId, String parentIds, Byte available, Integer priority, Byte leaf) {
        super(SysOrganization.SYS_ORGANIZATION);

        set(0, id);
        set(1, name);
        set(2, parentId);
        set(3, parentIds);
        set(4, available);
        set(5, priority);
        set(6, leaf);
    }
}
